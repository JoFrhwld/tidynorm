---
title: testing
---

```{r}
library(readr)
library(purrr)
library(dplyr)
library(ggplot2)
library(ggdensity)

s01_dat <- read_csv(
  "https://lin611-2024.github.io/notes/meetings/data/s01_dat.csv"
) 
```

```{r}
library(readr)
speaker_tracks <- read_csv("../inst/extdata/speaker_tracks.csv")
```
```{r}
speaker_tracks |> 
  filter(
    .by = c(speaker, id),
    if_all(
      F1:F3,
      ~mean(is.finite(.x)) > 0.9
    )
  )->speaker_tracks
```

```{r}
usethis::use_data(speaker_tracks, overwrite = TRUE)
```


```{r}
plot(200:2000, hz_to_mel(200:2000))
```

```{r}
library(dplyr)


speaker_data |> 
  group_by(speaker) |> 
  norm_lobanov(
    F1:F3
  ) 
```


```{r}
speaker_tracks |> 
  norm_track_lobanov(
    F1:F3,
    .by = speaker,
    .token_id_col = id,
    .time_col = t
  )
```
```{r}
speaker_tracks |>
  norm_track_generic(
    F1:F3,
    .by = speaker,
    .token_id_col = id,
    .by_formant = TRUE,
    .L = mean(.formant, na.rm = TRUE),
    .S = sd(.formant, na.rm = TRUE),
    .time_col = t
  )

speaker_tracks |> 
 norm_track_generic(
    F1:F3,
    .by = speaker,
    .token_id_col = id,
    .time_col = t,
    .L = mean(.formant, na.rm = T),
    .S = sd(.formant, na.rm = T),
    .by_formant = T,
    .return_dct = F,
    .drop_orig = T
  ) 
```
```{r}
speaker_tracks |> 
  filter(
    .by = c(speaker, id),
    row_number() %% 2 == 1
  ) -> small_tracks


small_tracks |> 
  norm_track_lobanov(
    F1:F3,
    .by = speaker,
    .token_id_col = id,
    .time_col = t
  )
```
```{r}
foo$call |> 
  purrr::map(as_label) |> 
  unlist()
```

```{r}
foo <- function(x){
  out <- bar(x)
  return(out)
}

bar <- function(x){
  return(rlang::trace_back())
}
```

```{r}
as.character(foo()$call[[1]])
```



