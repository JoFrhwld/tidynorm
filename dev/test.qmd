---
title: testing
---

```{r}
library(readr)
library(purrr)
library(dplyr)
library(ggplot2)
library(ggdensity)

s01_dat <- read_csv(
  "https://lin611-2024.github.io/notes/meetings/data/s01_dat.csv"
) 
```

```{r}
c(
  s01 = "https://lingmethodshub.github.io/content/R/tidy-norm/data/s01.txt",
  s03 = "https://lingmethodshub.github.io/content/R/tidy-norm/data/s03.txt"
) |> 
  map(
    ~read_tsv(.x, col_types=cols(sex = 'c'))
  ) |> 
  list_rbind(
    names_to = "speaker"
  ) |> 
  select(
    speaker, 
    vowel, 
    plt_vclass,
    ipa_vclass,
    word,
    F1:F3
  ) ->
  speaker_data
```

```{r}
speaker_data  |>
  dplyr::group_by(speaker) |> 
  norm_deltaF(
    F1:F3
  )
```

```{r}
foo
```

```{r}
attributes(foo)$norminfo
```

```{r}
check_norm(foo)
```

```{r}
library(rlang)
```

```{r}
my_fun <- function(x, fn = inner_fun){
  x <- fn(x)
  cli::cli_inform(
    c(
      "outer",
      names(attributes(x))
    )
  )
  return(x)
}

inner_fun <- function(x){
  attr(x, "jawn") <- "foo"
  cli::cli_inform(
    c(
      "inner",
      names(attributes(x))
    )
  )
  return(x)
}
```

```{r}
my_fun("a")
```

```{r}
c(
  s01 = "~/OneDrive - University of Kentucky/Corpora/Buckeye/buckeye_fave/s01.tracks",
  s03 = "~/OneDrive - University of Kentucky/Corpora/Buckeye/buckeye_fave/s03.tracks"
) |>
  map(
    ~read_tsv(.x, col_types=cols(sex = 'c'))
  ) |>
  list_rbind(names_to = "speaker") |> 
  filter(stress == 1) |>
  select(
    speaker,
    vowel,
    plt_vclass,
    word,
    id,
    t,
    F1:F3
  ) ->
  speaker_tracks_init
```

```{r}
speaker_tracks_init |> 
  count(
    speaker, id
  ) |> 
  slice(
    .by = speaker,
    1:500
  ) |> 
  left_join(speaker_tracks) |> 
  select(-n) |> 
  slice(
    .by=c(speaker, id),
   floor(seq(1, n(), length = 20))
  ) -> 
  speaker_tracks
```

```{r}
usethis::use_data(speaker_tracks, overwrite = T, version = 3)
```

```{r}
speaker_tracks |> 
  reframe_dct(
    F1:F3,
    .by = speaker,
    .token_id_col = id,
    .time_col = t
  )
```
