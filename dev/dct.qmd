---
title: dct-experiment
---

```{r}
library(tidynorm)
library(dplyr)
library(tidyr)
library(ggplot2)
library(reticulate)
scipy <- import("scipy")
p_dct <- scipy$fft$dct
```

```{r}
x <- seq(0,1, length = 10)
y <- 5 + x + (2 * (x^2)) + (-2 * (x^4))
y2 <- y
y2[7] <- NA
```

```{r}
dct_fun(y, 5)
```

```{r}
coefs <- dct(y, norm_forward = T)
p_dct(y2, norm = "forward", orthogonalize = TRUE)
```

```{r}
cbind(dct_fun(y), p_dct(y, norm = "forward", orthogonalize = TRUE))
```

```{r}
plot(idct(dct_fun(y2), n = 100))
```

```{r}
cos_fun(2L, 1L, 10L)
```

```{r}
plot(idct_rate(coefs, n = 100))
```

```{r}
plot(idct(coefs[1:5], n = 200))
```

```{r}
speaker_tracks |> 
  norm_track_nearey(
    F1:F3,
    .by = speaker,
    .token_id_col = id,
    .time_col = t
  ) |> 
  filter(
    plt_vclass == "ay0", 
    id == 9
  ) |> 
  pull(F2)->
  examp_f2
```

```{r}
examp_dct2 <- dct(examp_f2)[1:5]
```

```{r}
tibble(
  y = idct(examp_dct, n = 200),
  rate = idct_rate(examp_dct, n = 200),
  accel = idct_accel(examp_dct, n = 200)
) |> 
  mutate(
    time = (row_number()-1)/(n()-1)
  ) |> 
  ggplot(
    aes(time, y)
  )+
  geom_point()+
  geom_vline(
    xintercept = c(0.15, 0.85)
  )
```

```{r}
library(tidyverse)
```

```{r}
matplot(cos_bank(20, 2))
```

```{r}
speaker_tracks
```

```{r}
speaker_tracks |> 
  reframe_with_dct(
   F1:F3,
  .by = speaker,
  .token_id_col = id,
  .time_col = t
)
```

```{r}
speaker_tracks  |> 
  reframe_with_dct_smooth(
    F1:F3,
    .by = speaker,
    .token_id_col = id,
    .time_col = t,
    .rate = T
  )
  # reframe_with_dct(
  #   F1:F3, 
  #   .by = speaker,
  #   .token_id_col = id,
  #   .time_col = t
  # ) |> 
  # reframe_with_idct(
  #   F1:F3,
  #   .by = speaker,
  #   .token_id_col = id,
  #   .param_col = .param,
  #   .rate = T,
  #   .n = 10
  # )
```
