---
title: dct-experiment
---

```{r}
library(tidynorm)
library(dplyr)
library(tidyr)
library(ggplot2)
library(reticulate)
scipy <- import("scipy")
p_dct <- scipy$fft$dct
```

```{r}
x <- seq(0, 1, length = 10)
y <- 5 + x + (2 * (x^2)) + (-2 * (x^4))
```

```{r}
idct()
```

```{r}
scipy <- reticulate::import("scipy")
py_dct <- scipy$fft$dct

x <- seq(0, 1, length = 10)
y <- 5 + x + (2 * (x^2)) + (-2 * (x^4))

py_coefs <- py_dct(y, norm = "forward", orthogonalize = TRUE)
r_coefs <- dct(y)
```

```{r}
basis <- dct_basis(100, 5)
matplot(basis, type = "l", lty = 1)
```

```{r}
x <- dct(cbind(y, y))

colnames(x) <- colnames(x)

dimnames(x)
```

```{r}
speaker_tracks |>
  reframe_with_dct_smooth(
    F1:F3,
    .by = speaker,
    .token_id_col = id,
    .time_col = t,
    .rate = TRUE
  ) |>
  filter(
    speaker == "s01",
    id == 0
  )
```

```{r}
speaker_tracks |>
  norm_track_generic(
    F1:F3,
    .token_id_col = id,
    .L = 0,
    .S = 1 / sqrt(2),
    .by = speaker,
    .by_formant = T
  ) |>
  ggplot(
    aes(-F2, -F1)
  ) +
  geom_point()
```

```{r}
speaker_tracks |>
  summarise(
    across(
      F1:F3, mean
    ),
    .by = c(speaker, id)
  ) |>
  summarise(
    across(
      F1:F3,
      list(mean = mean, sd = sd)
    ),
    .by = speaker
  )
```

```{r}
(775.3252 - 664.4059) / 142.4775
```
