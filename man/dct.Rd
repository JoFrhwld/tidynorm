% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dct.R
\name{dct}
\alias{dct}
\title{Discrete Cosine Transform}
\usage{
dct(x, norm_forward = TRUE)
}
\arguments{
\item{x}{A vector or matrix to which the discrete cosine transform is applied}

\item{norm_forward}{DCT normalization (see Details)}
}
\description{
Discrete Cosine Transform
}
\details{
The DCT definition here is based on the python scipy.fft.dct definitions.

When \code{norm_forward = TRUE}

\deqn{
y_k = \frac{1}{zN} \sum_{j=0}^{N-1}x_j\cos\left(\frac{\pi k(2j+1)}{2N}\right)
}

\deqn{
z = \begin{cases}
   \sqrt{2}& \text{for }k=0\\
   1 & \text{for }k>0
 \end{cases}
}

When \code{norm_forward = FALSE}
\deqn{
 y_k = \frac{2}{z} \sum_{j=0}^{N-1}x_j\cos\left(\frac{\pi k(2j+1)}{2N}\right)
}

\deqn{
z = \begin{cases}
   \sqrt{2}& \text{for }k=0\\
   1 & \text{for }k>0
 \end{cases}
}

This second formulation is primarilly to be able to generate the
DCT basis functions like so

\if{html}{\out{<div class="sourceCode r">}}\preformatted{dct(diag(10), norm_forward = FALSE)
}\if{html}{\out{</div>}}

For the Inverse Discrete Cosine Transform, see \link{idct}.
}
\examples{
x <- seq(0,1, length = 10)
y <- 5 + x + (2 * (x^2)) + (-2 * (x^4))

dct_coefs <- dct(y)

}
